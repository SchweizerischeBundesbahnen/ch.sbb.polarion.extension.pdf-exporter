---
name: Build & Release
on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
env:
  SETTINGS_XML: ${{ github.workspace }}/.mvn/settings.xml
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: temurin
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      IO_JFROG_SBB_POLARION_TOKEN: ${{ secrets.IO_JFROG_SBB_POLARION_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      MARKDOWN2HTML_MAVEN_PLUGIN_FAIL_ON_ERROR: true
    steps:
      - name: 📄 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0  # Sonar needs full history
          persist-credentials: false
      - name: 🧱 Set up JDK and Maven with cache
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
      - name: 📝 Extract project metadata and build
        id: project_metadata
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          # Check if it is a release
          if [[ ! "${VERSION}" =~ -SNAPSHOT$ ]]; then
            echo "is_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_release=false" >> "$GITHUB_OUTPUT"
          fi
      - name: 📦 Build with Maven for Pushes
        if: github.event_name == 'push'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: mvn --batch-mode -s "${SETTINGS_XML}" clean verify sonar:sonar -Dsonar.branch.name="${GITHUB_HEAD_REF}"
      - name: 📦 Build with Maven for PRs
        if: github.event_name == 'pull_request'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_PR_NUMBER_REF: ${{ github.event.pull_request.number }}
        run: mvn --batch-mode -s "${SETTINGS_XML}" clean verify sonar:sonar -Dsonar.pullrequest.base="${GITHUB_HEAD_REF}" -Dsonar.pullrequest.branch="${GITHUB_BASE_REF}" -Dsonar.pullrequest.key="${GITHUB_PR_NUMBER_REF}"
      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: maven-artifacts
          path: |
            target/*.jar
            target/*.pom
          retention-days: 1
    outputs:
      project_version: ${{ steps.project_metadata.outputs.version }}
      is_release: ${{ steps.project_metadata.outputs.is_release }}
  deploy-maven-central:
    needs: build
    if: ${{ needs.build.outputs.is_release == 'true' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_USERNAME: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_USERNAME }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_TOKEN: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_TOKEN }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PRIVATE_KEY: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PRIVATE_KEY }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE }}
    steps:
      - name: 📄 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          name: maven-artifacts
      - name: 🧱 Set up JDK and Maven with cache
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
          gpg-private-key: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PRIVATE_KEY }}
      - name: 📦 Deploy to Maven Central
        run: |
          mvn --batch-mode -s "${SETTINGS_XML}" deploy \
            -Dmaven.test.skip=true \
            -Dmaven.main.skip=true \
            -Dmaven.javadoc.skip=true \
            -Dmaven.source.skip=true \
            -P gpg-sign \
            -P central-publishing
  deploy-github-packages:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_REPO_NAME: ${{ github.repository }}
    steps:
      - name: 📄 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          name: maven-artifacts
      - name: 🧱 Set up JDK and Maven with cache
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
      - name: 📦 Deploy to GitHub Packages
        run: |
          mvn --batch-mode -s "${SETTINGS_XML}" deploy \
            -Dmaven.test.skip=true \
            -Dmaven.main.skip=true \
            -Dmaven.javadoc.skip=true \
            -Dmaven.source.skip=true \
            -P deploy-github-packages
      - name: 📦 Upload assets to GitHub Release
        if: ${{ needs.build.outputs.is_release == 'true' }}
        env:
          RELEASE_VERSION: ${{ needs.build.outputs.project_version }}
        run: |-
          gh release upload "v${RELEASE_VERSION}" "target/*-${RELEASE_VERSION}.jar" --clobber
