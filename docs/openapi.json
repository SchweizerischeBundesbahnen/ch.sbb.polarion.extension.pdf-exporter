{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "PDF Exporter REST API",
    "version" : "v1"
  },
  "tags" : [ {
    "name" : "Settings",
    "description" : "Operations related to PDF-exporter settings management"
  } ],
  "paths" : {
    "/api/context" : {
      "get" : {
        "tags" : [ "Extension Information" ],
        "summary" : "Returns basic context information of Polarion's extension",
        "operationId" : "getContext",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Context"
                }
              }
            }
          }
        }
      }
    },
    "/api/version" : {
      "get" : {
        "tags" : [ "Extension Information" ],
        "summary" : "Returns version of Polarion's extension",
        "operationId" : "getVersion",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Version"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/{feature}/names/{name}" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Updates name of specified named setting",
        "operationId" : "renameSetting_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes specified setting by id",
        "operationId" : "deleteSetting_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/api/settings/{feature}/default-content" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns default values of specified setting",
        "operationId" : "getDefaultValues_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns the complete list of all supported features",
        "operationId" : "readFeaturesList_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/{feature}/names/{name}/revisions" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns revisions history of specified setting with specified id",
        "operationId" : "readRevisionsList_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Revision"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/{feature}/names/{name}/content" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns values (content) of specified setting by its id and revision",
        "operationId" : "readSetting_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Settings" ],
        "summary" : "Creates or updates named setting. Creation scenario will use default setting value if no body specified in the request.",
        "operationId" : "saveSetting_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/api/settings/{feature}/names" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Returns names of specified setting",
        "operationId" : "readSettingNames_1",
        "parameters" : [ {
          "name" : "feature",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SettingName"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/cors-config" : {
      "get" : {
        "summary" : "Checks CORS configuration",
        "description" : "Retrieves the status of the CORS configuration.",
        "operationId" : "checkCORSConfig",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved CORS configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/default-settings" : {
      "get" : {
        "summary" : "Checks default settings configuration",
        "operationId" : "checkDefaultSettings",
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved default settings configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/dle-toolbar-config" : {
      "get" : {
        "summary" : "Checks DLE Toolbar configuration",
        "operationId" : "checkDleToolbarConfig",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved DLE Toolbar configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/document-properties-pane-config" : {
      "get" : {
        "summary" : "Checks document properties pane configuration",
        "operationId" : "checkDocumentPropertiesPaneConfig",
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved document properties pane configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/live-report-config" : {
      "get" : {
        "summary" : "Checks Live Report configuration",
        "operationId" : "checkLiveReportConfig",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Live Report configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/configuration/weasyprint" : {
      "get" : {
        "summary" : "Checks WeasyPrint configuration",
        "description" : "Retrieves the status of the WeasyPrint configuration.",
        "operationId" : "checkWeasyPrint",
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved WeasyPrint configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ConfigurationStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/checknestedlists" : {
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Checks whether document contains nested lists",
        "operationId" : "checkNestedLists",
        "requestBody" : {
          "description" : "Export parameters used to locate and check the document for nested lists",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Check completed successfully, returning whether nested lists are present",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NestedListsCheck"
                }
              }
            }
          }
        }
      }
    },
    "/api/convert/html" : {
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Converts input HTML to PDF",
        "operationId" : "convertHtmlToPdf",
        "parameters" : [ {
          "name" : "orientation",
          "in" : "query",
          "description" : "default value: portrait",
          "schema" : {
            "type" : "string",
            "description" : "Orientation of the output document",
            "enum" : [ "PORTRAIT", "LANDSCAPE" ]
          }
        }, {
          "name" : "paperSize",
          "in" : "query",
          "description" : "default value: A4",
          "schema" : {
            "type" : "string",
            "description" : "Standard paper sizes",
            "enum" : [ "A5", "A4", "A3", "B5", "B4", "JIS_B5", "JIS_B4", "LETTER", "LEGAL", "LEDGER" ]
          }
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "default value: document.pdf",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "input html (must include html and body elements)",
          "content" : {
            "text/html" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Content of PDF document as a byte array",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/api/convert" : {
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Returns requested Polarion's document converted to PDF",
        "operationId" : "convertToPdf",
        "requestBody" : {
          "description" : "Export parameters to generate the PDF",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Content of PDF document as a byte array",
            "content" : {
              "application/pdf" : { }
            }
          }
        }
      }
    },
    "/api/convert/jobs" : {
      "get" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Returns all active PDF conversion jobs statuses",
        "operationId" : "getAllPdfConverterJobs",
        "responses" : {
          "200" : {
            "description" : "Conversion jobs statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Starts asynchronous conversion job of Polarion's document to PDF",
        "operationId" : "startPdfConverterJob",
        "requestBody" : {
          "description" : "Export parameters to generate the PDF",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Conversion process is started, job URI is returned in Location header"
          }
        }
      }
    },
    "/api/convert/jobs/{id}/result" : {
      "get" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Returns PDF conversion job result",
        "operationId" : "getPdfConverterJobResult",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Conversion job result is ready",
            "content" : {
              "application/pdf" : { }
            }
          },
          "204" : {
            "description" : "Conversion job is still in progress"
          },
          "409" : {
            "description" : "Conversion job is failed, cancelled or result is unreachable"
          },
          "404" : {
            "description" : "Conversion job id is unknown"
          }
        }
      }
    },
    "/api/convert/jobs/{id}" : {
      "get" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Returns PDF conversion job status",
        "operationId" : "getPdfConverterJobStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "303" : {
            "description" : "Conversion job is finished successfully, Location header contains result URL",
            "content" : {
              "application/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConverterJobDetails"
                }
              }
            }
          },
          "202" : {
            "description" : "Conversion job is still in progress",
            "content" : {
              "application/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConverterJobDetails"
                }
              }
            }
          },
          "409" : {
            "description" : "Conversion job is failed or cancelled"
          },
          "404" : {
            "description" : "Conversion job id is unknown"
          }
        }
      }
    },
    "/api/prepared-html-content" : {
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Returns prepared HTML which will be used for PDF conversion using WeasyPrint",
        "operationId" : "prepareHtmlContent",
        "requestBody" : {
          "description" : "Export parameters to generate the PDF",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Prepared HTML content",
            "content" : {
              "text/html" : { }
            }
          }
        }
      }
    },
    "/api/validate" : {
      "post" : {
        "tags" : [ "PDF Processing" ],
        "summary" : "Validates if requested Polarion's document been converted to PDF doesn't contain pages which content exceeds page's width",
        "operationId" : "validatePdfWidth",
        "parameters" : [ {
          "name" : "max-results",
          "in" : "query",
          "description" : "Limit of 'invalid' pages in response",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportParams"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Validation result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidthValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/cover-page/names/{name}/images" : {
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes images in SVN linked to specified cover page within specified scope (global or certain project)",
        "operationId" : "deleteImages",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Images deleted successfully"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/settings/localization/names/{name}/download" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Downloads localization values by name of localization settings",
        "operationId" : "downloadTranslations",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "language",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Localization file downloaded successfully"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/settings/cover-page/templates" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get list of cover page predefined template names",
        "operationId" : "getCoverPageTemplateNames",
        "responses" : {
          "200" : {
            "description" : "Template names retrieved successfully"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/settings/style-package/suitable-names" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get list of style packages suitable for a document",
        "operationId" : "getSuitableStylePackageNames",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spaceId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of style package names"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/settings/cover-page/templates/{template}" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Persist content of cover page predefined template",
        "operationId" : "persistCoverPageTemplate",
        "parameters" : [ {
          "name" : "template",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Template persisted successfully"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/settings/localization/upload" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Uploads localization values",
        "operationId" : "uploadTranslations",
        "parameters" : [ {
          "name" : "language",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataBodyPart"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Localization file uploaded successfully"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    },
    "/api/document-language" : {
      "get" : {
        "tags" : [ "Utility resources" ],
        "summary" : "Gets language of specified Polarion's document, defined in its custom field 'docLanguage'",
        "operationId" : "getDocumentLanguage",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spaceId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved document language"
          }
        }
      }
    },
    "/api/export-filename" : {
      "get" : {
        "tags" : [ "Utility resources" ],
        "summary" : "Gets a filename, prepared with velocity and placeholders",
        "operationId" : "getFileName",
        "parameters" : [ {
          "name" : "locationPath",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentType",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "description" : "Type of the document",
            "enum" : [ "DOCUMENT", "WIKI", "REPORT" ]
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully generated filename"
          }
        }
      }
    },
    "/api/projects/{projectId}/name" : {
      "get" : {
        "tags" : [ "Utility resources" ],
        "summary" : "Gets name of specified Polarion's project",
        "operationId" : "getProjectName",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved project name"
          }
        }
      }
    },
    "/api/webhooks/status" : {
      "get" : {
        "tags" : [ "Utility resources" ],
        "summary" : "Gets webhooks status - if they are enabled or not",
        "operationId" : "getWebhooksStatus",
        "responses" : {
          "200" : {
            "description" : "Webhooks status"
          }
        }
      }
    },
    "/api/link-role-names" : {
      "get" : {
        "tags" : [ "Utility resources" ],
        "summary" : "Gets list of possible WorkItem link role names in specified project scope",
        "operationId" : "readLinkRoleNames",
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "description" : "Project scope in form project/<PROJECT_ID>/",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved list of link role names",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Context" : {
        "type" : "object",
        "properties" : {
          "extensionContext" : {
            "type" : "string"
          },
          "swaggerUiUrl" : {
            "type" : "string"
          },
          "restUrl" : {
            "type" : "string"
          },
          "baseUrl" : {
            "type" : "string"
          }
        }
      },
      "Version" : {
        "type" : "object",
        "properties" : {
          "bundleName" : {
            "type" : "string"
          },
          "bundleVendor" : {
            "type" : "string"
          },
          "supportEmail" : {
            "type" : "string"
          },
          "automaticModuleName" : {
            "type" : "string"
          },
          "bundleVersion" : {
            "type" : "string"
          },
          "bundleBuildTimestamp" : {
            "type" : "string"
          },
          "projectURL" : {
            "type" : "string"
          },
          "bundleBuildTimestampDigitsOnly" : {
            "type" : "string"
          }
        }
      },
      "SettingsModel" : {
        "type" : "object",
        "properties" : {
          "bundleTimestamp" : {
            "type" : "string"
          }
        }
      },
      "Revision" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string"
          },
          "author" : {
            "type" : "string"
          },
          "baseline" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "SettingName" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          }
        }
      },
      "ConfigurationStatus" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "OK", "WARNING", "ERROR" ]
          },
          "details" : {
            "type" : "string"
          }
        }
      },
      "NestedListsCheck" : {
        "type" : "object",
        "properties" : {
          "containsNestedLists" : {
            "type" : "boolean",
            "description" : "Indicates whether the content contains nested lists"
          }
        },
        "description" : "Check result indicating whether nested lists are present"
      },
      "ExportParams" : {
        "required" : [ "Location path" ],
        "type" : "object",
        "properties" : {
          "Project ID" : {
            "type" : "string",
            "description" : "The unique identifier for the project",
            "example" : "elibrary"
          },
          "Location path" : {
            "type" : "string",
            "description" : "Document path for export"
          },
          "revision" : {
            "type" : "string",
            "description" : "The specific revision of the document to export"
          },
          "documentType" : {
            "type" : "string",
            "description" : "Type of the document",
            "example" : "DOCUMENT",
            "enum" : [ "DOCUMENT", "WIKI", "REPORT" ]
          },
          "coverPage" : {
            "type" : "string",
            "description" : "Cover page settings name"
          },
          "css" : {
            "type" : "string",
            "description" : "CSS settings name"
          },
          "headerFooter" : {
            "type" : "string",
            "description" : "Header Footer settings name"
          },
          "localization" : {
            "type" : "string",
            "description" : "Localization settings name"
          },
          "webhooks" : {
            "type" : "string",
            "description" : "Webhooks settings name"
          },
          "headersColor" : {
            "type" : "string",
            "description" : "Color to be used for headers in the document. By default dark blue color (Polarion's default)"
          },
          "orientation" : {
            "type" : "string",
            "description" : "Orientation of the output document",
            "default" : "PORTRAIT",
            "enum" : [ "PORTRAIT", "LANDSCAPE" ]
          },
          "paperSize" : {
            "type" : "string",
            "description" : "Standard paper sizes",
            "default" : "A4",
            "enum" : [ "A5", "A4", "A3", "B5", "B4", "JIS_B5", "JIS_B4", "LETTER", "LEGAL", "LEDGER" ]
          },
          "fitToPage" : {
            "type" : "boolean",
            "description" : "Content should be scaled to fit the page",
            "default" : true
          },
          "enableCommentsRendering" : {
            "type" : "boolean",
            "description" : "Comments should be rendered in the exported document",
            "default" : true
          },
          "watermark" : {
            "type" : "boolean",
            "description" : "Watermark content to be applied to the document"
          },
          "markReferencedWorkitems" : {
            "type" : "boolean",
            "description" : "Referenced work items should be marked in the document"
          },
          "cutEmptyChapters" : {
            "type" : "boolean",
            "description" : "Empty chapters should be removed from the document"
          },
          "cutEmptyWIAttributes" : {
            "type" : "boolean",
            "description" : "Empty work item attributes should be removed from the document",
            "default" : true
          },
          "cutLocalUrls" : {
            "type" : "boolean",
            "description" : "Local Polarion URLs should be removed from the document"
          },
          "followHTMLPresentationalHints" : {
            "type" : "boolean",
            "description" : "HTML presentational hints should be followed",
            "default" : true
          },
          "numberedListStyles" : {
            "type" : "string",
            "description" : "SCC styles to be applied to numbered lists in the document"
          },
          "chapters" : {
            "type" : "array",
            "description" : "Specific higher level chapters",
            "items" : {
              "type" : "string",
              "description" : "Specific higher level chapters"
            }
          },
          "language" : {
            "type" : "string",
            "description" : "Language in the exported document"
          },
          "linkedWorkitemRoles" : {
            "type" : "array",
            "description" : "Specific Workitem roles",
            "example" : [ "has parent", "depends on" ],
            "items" : {
              "type" : "string",
              "description" : "Specific Workitem roles",
              "example" : "[\"has parent\",\"depends on\"]"
            }
          },
          "urlQueryParameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of attributes extracted from the URL"
            },
            "description" : "Map of attributes extracted from the URL"
          },
          "internalContent" : {
            "type" : "string",
            "description" : "Internal content"
          }
        }
      },
      "ConverterJobDetails" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the converter job",
            "example" : "IN_PROGRESS",
            "enum" : [ "IN_PROGRESS", "SUCCESSFULLY_FINISHED", "FAILED", "CANCELLED" ]
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message if the conversion failed"
          }
        },
        "description" : "Details of the converter job including status and error message if any"
      },
      "PageInfo" : {
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "description" : "The number of the page that failed validation",
            "format" : "int32"
          },
          "content" : {
            "type" : "string",
            "description" : "The encoded content of the page that failed validation"
          }
        },
        "description" : "Information about a specific page that failed validation, including its number and content."
      },
      "WidthValidationResult" : {
        "type" : "object",
        "properties" : {
          "invalidPages" : {
            "$ref" : "#/components/schemas/PageInfo"
          },
          "suspiciousWorkItems" : {
            "$ref" : "#/components/schemas/WorkItemRefData"
          }
        },
        "description" : "Result of the width validation process"
      },
      "WorkItemRefData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique identifier of the Work item"
          },
          "project" : {
            "type" : "string",
            "description" : "The unique identifier of the project to which the Work item belongs"
          },
          "layout" : {
            "type" : "string",
            "description" : "Work item layout"
          },
          "revision" : {
            "type" : "string",
            "description" : "The revision number of the Work item"
          },
          "link" : {
            "type" : "string"
          }
        },
        "description" : "Data class representing a reference to a work item, including ID, project, layout, and revision"
      },
      "BodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "FormDataBodyPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "formDataContentDisposition" : {
            "$ref" : "#/components/schemas/FormDataContentDisposition"
          },
          "simple" : {
            "type" : "boolean"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "MessageBodyWorkers" : {
        "type" : "object"
      },
      "MultiPart" : {
        "type" : "object",
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "mediaType" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "subtype" : {
                "type" : "string"
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "wildcardType" : {
                "type" : "boolean"
              },
              "wildcardSubtype" : {
                "type" : "boolean"
              }
            }
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "type" : "object"
          },
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            }
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              }
            }
          }
        }
      },
      "ParameterizedHeader" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "WebhooksStatus" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}